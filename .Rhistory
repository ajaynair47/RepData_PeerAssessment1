b <- makeCacheMatrix(m)
c<-cacheSolve(b)
c
d <- cacheSolve(b)
d
version()
version
install.packages("RMySQL", type = "source")
library(RMySQL)
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library(RMySQL)
con <- dbConnect(MySQL(), host="127.0.0.1", port= 3306, user="root", password = "ajaymysql", dbname="db")
dbDisconnect(con)
ucscDB <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscDB <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscDB <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDB,"show databases;")
result
dbDisconnect(ucscDb)
dbDisconnect(ucscDB)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
created=h5createFile("example.h5")
created
getwd()
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "7b5986b8e8b01a54a76f254c8f6daaf069e771f0")
?oauth_app
myapp <- oauth_app("github", "81288434874c35921d6c", "7b5986b8e8b01a54a76f254c8f6daaf069e771f0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
install.packages("httpuv")
libary(httpuv)
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
class(req)
head(req)
content(req)
install.package("jsonlite")
library(jsonlite)
install.packages("jsonlite", repos="http://cran.r-project.org")
library(jsonlite)
json1 = content(req)
json2 = jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
names(json2)
class(json2)
json2[1,"created_at"]
nrow(json2)
json2[,"created_at"]
json2[,"name"]
json2[5,"name"]
json2[5,"created_at"]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode = readLines(con)
close(con)
class(htmlcode)
head(htmlcode)
htmlcode[10]
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileurl, destfile="week2.csv")
data <- read.table("week2.csv", sep = "tab", header=true)
?read.table
data <- read.table("week2.csv", sep = "\t", header=true)
data <- read.table("week2.csv", sep = "\t", header=TRUE)
head(data)
data <- read.table("week2.csv", sep = "\t", header=FALSE, skip=4)
head(data)
class(data)
nrow(data)
ncol(data)
?mid
data[1]
data[1,1]
data[2,1]
head(data)
as.character(data[1,1])
as.character(data[1,1])[28]
substr(as.character(data[1,1]),28,31)
substr(as.character(data[1,1]),28,32)
substr(as.character(data[1,1]),29,32)
as.numeric(substr(as.character(data[1,1]),29,32))
as.numeric(substr(as.character(data[,1]),29,32))
sum(as.numeric(substr(as.character(data[,1]),29,32)))
?xyplot
library(lattice)
?xyplot
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
?par
?barplot
?splom
?trellis.par.set
library(datasets)
data(airquality)
summary(airquality)
str(airquality)
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data=airquality, facets = . ~ Month)
qplot(Wind, Ozone, data=airquality, facets = . ~ factor(Month))
qplot(votes, rating, data=movies) + geom_smooth()
libray(sqldf)
library(sqldf)
?read.csv.sql
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv", sql = "select top 2 * from file")
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv", sql = "select * from file limit 2")
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv", sql = "select * from file", nrows=2)
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv", sql = "select * from file limit 2", dbname = tempfile())
read.csv.sql("C:\Users\ajayn\Downloads\\test1.csv", sql = "select * from file limit 2", dbname = tempfile())
read.csv.sql("C:\\Users\\ajayn\\Downloads\\test1.csv", sql = "select * from file limit 2", dbname = tempfile())
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\test 1.csv", sql = "select * from file limit 2", dbname = tempfile())
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\test 1.csv", sql = "select * from file limit 2", dbname = tempfile())
read.csv.sql("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv", sql = "select * from file limit 2", dbname = tempfile())
?read.csv
df <- read.csv("C:\\Users\\ajayn\\Documents\\My Tableau Repository\\Datasources\\CCL Transactional Data.csv",nrows=3)
df
str(df)
version
version
setwd("C:\\Users\\ajayn\\Documents\\_BI Technology\\Tools\\Data Science\\Reproducible Research\\Week 2\\PeerAssign1\\RepData_PeerAssessment1")
?read.csv
dfActivity <- read.csv("activity.csv")
summary(dfActivity)
dim(dfActivity)
head(dfActivity)
tail(dfActivity)
288*6
str(dfActivity)
summary(dfActivity$steps)
table(dfActivity)
table(dfActivity$names)
str(dfActivity)
summary(dfActivity$steps)
dates <- dfActivity$date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
dates <- dfActivity$date
dates <- as.Date(as.character(dates), "%Y-%m-%d")
str(dates)
hist(dates,"day")
?hist
plot(dates,dfActivity$steps)
?plot
library(plyr)
sum.df <- ddply(dfActivity, c("date"), summarize, Steps = sum(steps))
barplot(sum.df$Steps, names.arg = sum.df$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
summary(sum.df$Steps)
?summary
mean(sum.df$Steps)
?mean
mean(sum.df$Steps, na.rm=TRUE)
median(sum.df$Steps, na.rm=TRUE)
str(sum.df)
?ddply
?rank
rank.df <- ddply(dfActivity, c("date"), summarize, IntervalNum = rank(interval))
str(rank.df)
str(dfActivity)
?cbind
dfActivity1 <- cbind(dfActivity, rank.df$IntervalNum)
str(dfActivity1)
summary(dfActivity1.interval)
summary(dfActivity1$interval)
interval.df <- ddply(dfActivity, c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
?plot
str(interval.df)
plot(interval.df.interval,interval.df.Steps, type="l")
plot(interval.df$interval,interval.df$Steps, type="l")
with(interval.df, interval[Steps == max(Steps)]))
with(interval.df, interval[Steps == max(Steps)])
835/60
2355/60
24*60
835/50
835/60
2355/60
24*60
2400/60
60*12
2300/60
sum(is.na(dfActivity$steps))
str(dfActivity)
summary(dfActivity)
dfDateIntervalMean <- ddply(dfActivity, c("date","interval"), summarize, Steps = mean(steps, na.rm = TRUE))
str(dfDateIntervalMean)
head(dfDateIntervalMean)
?ddply
summary(dfActivity)
str(dfActivity)
dfDateIntervalMean <- ddply(dfActivity, c("date"), summarize, Steps = mean(steps, na.rm = TRUE))
str(dfDateIntervalMean)
dfDateIntervalMean
dfDateIntervalMean <- ddply(dfActivity, c("date","interval"), summarize, Steps = mean(steps, na.rm = TRUE))
dfActivity1 <- dfActivity
with(dfDateIntervalMean, steps[date == "2012-10-03" && interval == 154])
with(dfDateIntervalMean, Steps[date == "2012-10-03" && interval == 154])
dfDateIntervalMean <- ddply(dfActivity, c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
str(dfDateIntervalMean)
with(dfDateIntervalMean, Steps[interval == 154])
with(dfDateIntervalMean, Steps[interval == 835])
with(dfActivity, steps[date == "2012-10-03" && interval == 154])
with(dfActivity, steps[date == "2012-10-03" && interval == 430])
with(dfActivity, steps[date == "2012-10-03" & interval == 430])
with(dfActivity, steps[date == "2012-10-03" & interval == 555])
with(dfActivity, steps[date == "2012-10-01" & interval == 555])
with(dfActivity, steps[date == "2012-10-01" & interval == 555]) <- 10
dfActivity$steps[,steps[date == "2012-10-01" & interval == 555]] <- 10
dfActivity$steps[,date == "2012-10-01" & interval == 555] <- 10
with(dfActivity1, steps[date == "2012-10-01" & interval == 555])
dfActivity1$steps[dfActivity1$date == "2012-10-01" & dfActivity1$interval == 555] <- 10
with(dfActivity1, steps[date == "2012-10-01" & interval == 555])
dfDateIntervalMean <- ddply(dfActivity, c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
str(dfDateIntervalMean)
sum(is.na(dfDateIntervalMean$Steps))
dfActivity1 <- dfActivity
str(dfActivity1)
nrows(dfActivity1)
nrow(dfActivity1)
for (i in 1:nrow(dfActivity1))
for (i in 1:3)
{}
for (i in 1:3)
{
print(dfActivity1[i,"date"])
print(dfActivity1[i,"interval"])
print(dfActivity1[i,"steps"])
}
for (i in 1:3)
{
print(dfActivity1[i,"date"] dfActivity1[i,"interval"] dfActivity1[i,"steps"])
}
?print
for (i in 1:3)
print(dfActivity1[i,"date"]
)}
for (i in 1:3) print(dfActivity1[i,"date"])
for (i in 1:3) print(dfActivity1[i,"interval"])
for (i in 1:3) print(dfActivity1[i,"steps"])
dfDateIntervalMean$Steps[dfDateIntervalMean$interval == 0]
dfDateIntervalMean$Steps[dfDateIntervalMean$interval == 5]
dfDateIntervalMean$Steps[dfDateIntervalMean$interval == 10]
for (i in 1:3)
{
if (is.na(dfActivity1[i,"steps"]))
{}
for (i in 1:3)
{
if (is.na(dfActivity1[i,"steps"]))
{
dfActivity1[i,"steps"] <-
dfDateIntervalMean$Steps[dfDateIntervalMean$interval == dfActivity1[i,"interval"]]
}
}
for (i in 1:3) print(dfActivity1[i,"steps"])
for (i in 1:nrow(dfActivity1))
{
if (is.na(dfActivity1[i,"steps"]))
{
dfActivity1[i,"steps"] <-
dfDateIntervalMean$Steps[dfDateIntervalMean$interval == dfActivity1[i,"interval"]]
}
}
str(dfActivity1)
str(dfActivity)
summary(dfActivity1)
summary(dfActivity)
sum(is.na(dfActivity1$steps))
dfDailySummaryWithoutNA <- ddply(dfActivity1, c("date"), summarize,
Steps = sum(steps))
barplot(dfDailySummaryWithoutNA$Steps, names.arg = dfDailySummaryWithoutNA$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
mean(dfDailySummaryWithoutNA$Steps, na.rm=TRUE)
median(dfDailySummaryWithoutNA$Steps, na.rm=TRUE)
dfDailySummary <- ddply(dfActivity, c("date"), summarize, Steps = sum(steps))
mean(dfDailySummary$Steps, na.rm=TRUE)
median(dfDailySummary$Steps, na.rm=TRUE)
str(dfDailySummaryWithoutNA)
dfDailySummaryWithoutNA
dfDailySummary
par(mfrow = c(1,2))
barplot(dfDailySummary$Steps, names.arg = dfDailySummary$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
barplot(dfDailySummaryWithoutNA$Steps, names.arg = dfDailySummaryWithoutNA$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
summary(dfDailySummary)
summaru(dfDailySummaryWithoutNA)
summary(dfDailySummaryWithoutNA)
stddev(dfDailySummary$Steps)
sd(dfDailySummary$Steps,na.rm = TRUE)
sd(dfDailySummaryWithoutNA$Steps,na.rm = TRUE)
mean(dfDailySummary$Steps)
dfActivityWithoutNA$date[1,]
dfActivity1[1,]
dfActivity1$date[1,]
?Weekday
?weekdays
dfActivityWithoutNA$date[1]
dfActivity1$date[1]
weekdays(as.Date(as.Character(dfActivity1$date[1]), "%Y-%m-%d"), abbreviate=FALSE)
weekdays(as.Date(as.character(dfActivity1$date[1]), "%Y-%m-%d"), abbreviate=FALSE)
weekdays(as.Date("2012-10-06"), abbreviate=FALSE)
weekdays(as.Date("2012-10-07"), abbreviate=FALSE)
weekdays(as.Date("2012-10-08"), abbreviate=FALSE)
dfActivity1 <- cbind(dfActivity1, weekdays(as.Date(as.character(dfActivity1$date), "%Y-%m-%d"), abbreviate=FALSE))
str(dfActivity1)
names(dfActivity1)
names(dfActivity1)[4] <- "Weekday"
names(dfActivity1)
?cbind
for (i in 1:nrow(dfActivity1))
{
for (i in 1:3)
{
for (i in 1:10)
{
if (dfActivity[1,"Weekday"] = "Saturday" or dfActivity[1,"Weekday"] = "Sunday")
for (i in 1:10)
{
if (dfActivity[1,"Weekday"] == "Saturday" or dfActivity[1,"Weekday"] == "Sunday")
for (i in 1:10)
{
if (dfActivity1[1,"Weekday"] == "Saturday" | dfActivity1[1,"Weekday"] == "Sunday")
dfActivity1[1,"Weekday"] <- "Weekend"
else
dfActivity1[1,"Weekday"] <- "Weekday"
}
str(dfActivity)
str(dfActivity1)
dfActivity1[1,"Weekday"]
dfActivity1 <- subset(dfActivity1, select = -c(Weekday))
str(dfActivity1)
dfActivity1 <- cbind(dfActivity1, "Weekdays" as weekdays(as.Date(as.character(dfActivity1$date), "%Y-%m-%d"), abbreviate=FALSE))
dfActivity1 <- cbind(dfActivity1, "Weekdays" = weekdays(as.Date(as.character(dfActivity1$date), "%Y-%m-%d"), abbreviate=FALSE))
str(dfActivity1)
dfActivity1[1,"Weekdays"]
dfActivity1[2,"Weekdays"]
dfActivity1[1,"Weekdays"] <- "Weekday"
dfActivity1 <- subset(dfActivity1, select = -c(Weekdays))
dfActivity1 <- cbind(dfActivity1, "Weekdays" = as.character(weekdays(as.Date(as.character(dfActivity1$date), "%Y-%m-%d"), abbreviate=FALSE)))
str(dfActivity1)
Weekday <- character(nrow(dfActivity1))
for (i in 1:3)
{
Weekday[i] <- weekdays(as.Date(as.character(dfActivity1$date[i]), "%Y-%m-%d"), abbreviate=FALSE)
}
Weekday[1]
Weekday[2]
Weekday[3]
length(Weekday)
Weekday[4]
dfActivity1$date[1]
dfActivity1$date[3]
dfActivity1 <- subset(dfActivity1, select = -c(Weekdays))
str(dfActivity1)
for (i in 1:3)
{}
for (i in 1:3)
for (i in 1:3)
{
x <- weekdays(as.Date(as.character(dfActivity1$date[i]), "%Y-%m-%d"), abbreviate=FALSE)
if (x == 'Saturday' | x == 'Sunday')
x <- "Weekend"
else
x <- "Weekday"
Weekday[i] <- x
}
Weekday[1]
Weekday[3]
Weekday[2]
Weekday[4]
for (i in 1:nrow(dfActivity1))
{
x <- weekdays(as.Date(as.character(dfActivity1$date[i]), "%Y-%m-%d"), abbreviate=FALSE)
if (x == 'Saturday' | x == 'Sunday')
x <- "Weekend"
else
x <- "Weekday"
Weekday[i] <- x
}
str(dfActivity1)
dfActivity1 <- cbind(dfActivity1, Weekday)
str(dfActivity1)
par(mfrow = c(2,1))
dfIntervalSummaryWeekday <- ddply(subset(dfActivity, Weekday=="Weekday"), c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
dfIntervalSummaryWeekend <- ddply(subset(dfActivity, Weekday=="Weekend"), c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
str(dfIntervalSummaryWeekday)
str(dfIntervalSummaryWeekend)
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l")
plot(dfIntervalSummaryWeekend$interval,dfIntervalSummaryWeekend$Steps, type="l")
par(mfrow = c(1,1))
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l")
par(mfrow = c(1,2))
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l")
plot(dfIntervalSummaryWeekend$interval,dfIntervalSummaryWeekend$Steps, type="l")
rng(dfIntervalSummaryWeekday$Steps, dfIntervalSummaryWeekend$Steps, na.rm=T)
rng <- range(dfIntervalSummaryWeekday$Steps, dfIntervalSummaryWeekend$Steps, na.rm=T)
rng
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekday$Steps,na.rm=T))
plot(dfIntervalSummaryWeekend$interval,dfIntervalSummaryWeekend$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekend$Steps,na.rm=T))
abline(h=median(dfIntervalSummaryWeekend$Steps,na.rm=T))
?abline
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekday$Steps,na.rm=T), col="red")
abline(h=median(dfIntervalSummaryWeekday$Steps,na.rm=T), col="blue")
plot(dfIntervalSummaryWeekend$interval,dfIntervalSummaryWeekend$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekend$Steps,na.rm=T), col="red")
abline(h=median(dfIntervalSummaryWeekend$Steps,na.rm=T), col="blue")
source('~/_BI Technology/Tools/Data Science/Reproducible Research/Week 2/PeerAssign1/RepData_PeerAssessment1/Test.R')
source('~/_BI Technology/Tools/Data Science/Reproducible Research/Week 2/PeerAssign1/RepData_PeerAssessment1/Test.R')
Test()
source('~/_BI Technology/Tools/Data Science/Reproducible Research/Week 2/PeerAssign1/RepData_PeerAssessment1/Test.R')
Test()
source('~/_BI Technology/Tools/Data Science/Reproducible Research/Week 2/PeerAssign1/RepData_PeerAssessment1/Test.R')
Test()
source('~/_BI Technology/Tools/Data Science/Reproducible Research/Week 2/PeerAssign1/RepData_PeerAssessment1/Test.R')
Test()
dfActivity <- read.csv("activity.csv")
str(dfActivity)
summary(dfActivity$steps)
library(plyr)
dfDailySummary <- ddply(dfActivity, c("date"), summarize,
Steps = sum(steps))
barplot(dfDailySummary$Steps, names.arg = dfDailySummary$date,
col = "wheat", xlab="Date", ylab = "Total Steps",
main = "Total Steps per Day")
mean(dfDailySummary$Steps, na.rm=T)
median(dfDailySummary$Steps, na.rm=T)
dfIntervalSummary <- ddply(dfActivity, c("interval"), summarize, Steps = mean(steps, na.rm = TRUE))
plot(dfIntervalSummary$interval,dfIntervalSummary$Steps, type="l")
with(dfIntervalSummary, interval[Steps == max(Steps)])
sum(is.na(dfActivity$steps))
dfActivityWithoutNA <- dfActivity
for (i in 1:nrow(dfActivityWithoutNA))
{
if (is.na(dfActivityWithoutNA[i,"steps"]))
{
dfActivityWithoutNA[i,"steps"] <-
dfIntervalSummary$Steps[dfIntervalSummary$interval == dfActivityWithoutNA[i,"interval"]]
}
}
sum(is.na(dfActivityWithoutNA$steps))
dfDailySummaryWithoutNA <- ddply(dfActivityWithoutNA, c("date"), summarize,
Steps = sum(steps))
barplot(dfDailySummaryWithoutNA$Steps, names.arg = dfDailySummaryWithoutNA$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
mean(dfDailySummaryWithoutNA$Steps, na.rm=T)
median(dfDailySummaryWithoutNA$Steps, na.rm=T)
barplot(dfDailySummary$Steps, names.arg = dfDailySummary$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day")
barplot(dfDailySummaryWithoutNA$Steps, names.arg = dfDailySummaryWithoutNA$date, col = "wheat", xlab="Date", ylab = "Total Steps", main = "Total Steps per Day without Missing Values")
mean(dfDailySummary$Steps, na.rm=TRUE)
mean(dfDailySummaryWithoutNA$Steps, na.rm=TRUE)
median(dfDailySummary$Steps, na.rm=TRUE)
median(dfDailySummaryWithoutNA$Steps, na.rm=TRUE)
sd(dfDailySummary$Steps, na.rm=TRUE)
sd(dfDailySummaryWithoutNA$Steps, na.rm=TRUE)
Weekday <- character(nrow(dfActivityWithoutNA))
for (i in 1:nrow(dfActivityWithoutNA))
{
x <- weekdays(as.Date(as.character(dfActivityWithoutNA[i]),
"%Y-%m-%d"), abbreviate=FALSE)
if (x == "Saturday" | x == "Sunday")
x <- "Weekend"
else
x <- "Weekday"
Weekday[i] <- x
}
if (x == "Saturday" | x == "Sunday")
{
x <- "Weekend"
else
if (x == "Saturday" | x == "Sunday")
{
x <- "Weekend"
}
for (i in 1:nrow(dfActivityWithoutNA))
{
x <- weekdays(as.Date(as.character(dfActivityWithoutNA[i,"date"]),
"%Y-%m-%d"), abbreviate=FALSE)
if (x == "Saturday" | x == "Sunday")
x <- "Weekend"
else
x <- "Weekday"
Weekday[i] <- x
}
dfActivityWithoutNA <- cbind(dfActivityWithoutNA, Weekday)
dfIntervalSummaryWeekday <- ddply(subset(dfActivityWithoutNA,
Weekday=="Weekday"), c("interval"),
summarize, Steps = mean(steps, na.rm = TRUE))
dfIntervalSummaryWeekend <- ddply(subset(dfActivityWithoutNA,
Weekday=="Weekend"), c("interval"),
summarize, Steps = mean(steps, na.rm = TRUE))
rng <- range(dfIntervalSummaryWeekday$Steps, dfIntervalSummaryWeekend$Steps, na.rm=T)
plot(dfIntervalSummaryWeekday$interval,dfIntervalSummaryWeekday$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekday$Steps,na.rm=T), col="red")
abline(h=median(dfIntervalSummaryWeekday$Steps,na.rm=T), col="blue")
plot(dfIntervalSummaryWeekend$interval,dfIntervalSummaryWeekend$Steps, type="l",ylim=rng)
abline(h=mean(dfIntervalSummaryWeekend$Steps,na.rm=T), col="red")
abline(h=median(dfIntervalSummaryWeekend$Steps,na.rm=T), col="blue")
